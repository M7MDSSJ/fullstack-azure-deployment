{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "applicationGateways_app_gw_name": {
      "type": "String"
    },
    "networkInterfaces_gradserver663_z1_name": {
      "type": "String"
    },
    "networkSecurityGroups_GradServer_nsg_name": {
      "type": "String"
    },
    "networkSecurityGroups_appgw_nsg_name": {
      "type": "String"
    },
    "publicIPAddresses_GradServer_ip_name": {
      "type": "String"
    },
    "publicIPAddresses_appgw_ip_name": {
      "type": "String"
    },
    "sshPublicKeys_GradServer_key_name": {
      "type": "String"
    },
    "storageAccounts_taier_name": {
      "type": "String"
    },
    "virtualMachines_GradServer_name": {
      "type": "String"
    },
    "virtualNetworks_GradServer_vnet_name": {
      "type": "String"
    }
  },
  "resources": [
    {
      "apiVersion": "2024-11-01",
      "location": "westeurope",
      "name": "[parameters('sshPublicKeys_GradServer_key_name')]",
      "properties": {
        "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDJHBzqD68tAbOf8cXc3EP7tCOSxLw/0N7cLGQGtXLv4smYMiV05r0R7H3XaniyCqbveFxvbw6Ne5zh5hjXhfb9MLAKh+fhIhw0xqRqfwwdkp35u2d4I6nkFOia9cZT2UPDYk+6ZTwqUWAEmcoYoH8+Yjhfa6+/Yz3irG7EaLXcLZnNz1uG47OasMyVt+eOuIl8vgjwWFhA2o8s65XV/tHre32esbihAQ5snNQJdblqTmQhD3bxpkIwj2LaPYqU92Zm1rK+WC2MCsUGwA8hesW4G6BvcTCk3Kc9UUI1FK4luBfNObFIoT3ih1oLNU0CR45xJtW3QtRpDDJQyig7OVNpEKvOsYzLPZEByFCOoM78xiaXqfFMAc7EsPgvox5bqP8P9MQSh4oBRDzk/IeO2kiivkpPSi2/gpTjIyLAjG0Pijwyk91YkymJBZMYdGNbmmM6znJUUr+lpqQKzxMeEXHNf3SB9H55T/Nwn/m7kksnMb4bV5RjU/czb1R1/0tj/2U= generated-by-azure"
      },
      "type": "Microsoft.Compute/sshPublicKeys"
    },
    {
      "apiVersion": "2024-05-01",
      "location": "westeurope",
      "name": "[parameters('networkSecurityGroups_appgw_nsg_name')]",
      "properties": {
        "securityRules": [
          {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_appgw_nsg_name'), 'AllowAnyCustom65200-65535Inbound')]",
            "name": "AllowAnyCustom65200-65535Inbound",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationAddressPrefixes": [],
              "destinationPortRange": "65200-65535",
              "destinationPortRanges": [],
              "direction": "Inbound",
              "priority": 200,
              "protocol": "TCP",
              "sourceAddressPrefix": "*",
              "sourceAddressPrefixes": [],
              "sourcePortRange": "*",
              "sourcePortRanges": []
            },
            "type": "Microsoft.Network/networkSecurityGroups/securityRules"
          },
          {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_appgw_nsg_name'), 'AllowAnyHTTPInbound')]",
            "name": "AllowAnyHTTPInbound",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationAddressPrefixes": [],
              "destinationPortRange": "80",
              "destinationPortRanges": [],
              "direction": "Inbound",
              "priority": 210,
              "protocol": "TCP",
              "sourceAddressPrefix": "*",
              "sourceAddressPrefixes": [],
              "sourcePortRange": "*",
              "sourcePortRanges": []
            },
            "type": "Microsoft.Network/networkSecurityGroups/securityRules"
          },
          {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_appgw_nsg_name'), 'AllowAnyHTTPSInbound')]",
            "name": "AllowAnyHTTPSInbound",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationAddressPrefixes": [],
              "destinationPortRange": "443",
              "destinationPortRanges": [],
              "direction": "Inbound",
              "priority": 220,
              "protocol": "TCP",
              "sourceAddressPrefix": "*",
              "sourceAddressPrefixes": [],
              "sourcePortRange": "*",
              "sourcePortRanges": []
            },
            "type": "Microsoft.Network/networkSecurityGroups/securityRules"
          }
        ]
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "2024-05-01",
      "location": "westeurope",
      "name": "[parameters('networkSecurityGroups_GradServer_nsg_name')]",
      "properties": {
        "securityRules": [
          {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_GradServer_nsg_name'), 'SSH')]",
            "name": "SSH",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationAddressPrefixes": [],
              "destinationPortRange": "22",
              "destinationPortRanges": [],
              "direction": "Inbound",
              "priority": 300,
              "protocol": "TCP",
              "sourceAddressPrefix": "*",
              "sourceAddressPrefixes": [],
              "sourcePortRange": "*",
              "sourcePortRanges": []
            },
            "type": "Microsoft.Network/networkSecurityGroups/securityRules"
          },
          {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_GradServer_nsg_name'), 'HTTP')]",
            "name": "HTTP",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationAddressPrefixes": [],
              "destinationPortRange": "80",
              "destinationPortRanges": [],
              "direction": "Inbound",
              "priority": 100,
              "protocol": "TCP",
              "sourceAddressPrefix": "*",
              "sourceAddressPrefixes": [],
              "sourcePortRange": "*",
              "sourcePortRanges": []
            },
            "type": "Microsoft.Network/networkSecurityGroups/securityRules"
          },
          {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_GradServer_nsg_name'), 'Allow-AGW-App')]",
            "name": "Allow-AGW-App",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "51.105.241.63",
              "destinationAddressPrefixes": [],
              "destinationPortRange": "3000",
              "destinationPortRanges": [],
              "direction": "Inbound",
              "priority": 340,
              "protocol": "TCP",
              "sourceAddressPrefix": "9.163.48.125",
              "sourceAddressPrefixes": [],
              "sourcePortRange": "*",
              "sourcePortRanges": []
            },
            "type": "Microsoft.Network/networkSecurityGroups/securityRules"
          },
          {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_GradServer_nsg_name'), 'Allow-AGW-Chatbot')]",
            "name": "Allow-AGW-Chatbot",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "51.105.241.63",
              "destinationAddressPrefixes": [],
              "destinationPortRange": "8001",
              "destinationPortRanges": [],
              "direction": "Inbound",
              "priority": 350,
              "protocol": "TCP",
              "sourceAddressPrefix": "9.163.48.125",
              "sourceAddressPrefixes": [],
              "sourcePortRange": "*",
              "sourcePortRanges": []
            },
            "type": "Microsoft.Network/networkSecurityGroups/securityRules"
          }
        ]
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "2024-05-01",
      "location": "westeurope",
      "name": "[parameters('publicIPAddresses_appgw_ip_name')]",
      "properties": {
        "ddosSettings": {
          "protectionMode": "VirtualNetworkInherited"
        },
        "idleTimeoutInMinutes": 4,
        "ipAddress": "9.163.48.125",
        "ipTags": [],
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "type": "Microsoft.Network/publicIPAddresses",
      "zones": [
        "1",
        "3",
        "2"
      ]
    },
    {
      "apiVersion": "2024-05-01",
      "location": "westeurope",
      "name": "[parameters('publicIPAddresses_GradServer_ip_name')]",
      "properties": {
        "idleTimeoutInMinutes": 4,
        "ipAddress": "51.105.241.63",
        "ipTags": [],
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "type": "Microsoft.Network/publicIPAddresses",
      "zones": [
        "1"
      ]
    },
    {
      "apiVersion": "2024-01-01",
      "kind": "StorageV2",
      "location": "westeurope",
      "name": "[parameters('storageAccounts_taier_name')]",
      "properties": {
        "accessTier": "Hot",
        "allowBlobPublicAccess": false,
        "allowCrossTenantReplication": false,
        "allowSharedKeyAccess": true,
        "defaultToOAuthAuthentication": false,
        "dnsEndpointType": "Standard",
        "encryption": {
          "keySource": "Microsoft.Storage",
          "requireInfrastructureEncryption": false,
          "services": {
            "blob": {
              "enabled": true,
              "keyType": "Account"
            },
            "file": {
              "enabled": true,
              "keyType": "Account"
            }
          }
        },
        "largeFileSharesState": "Enabled",
        "minimumTlsVersion": "TLS1_2",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow",
          "ipRules": [],
          "virtualNetworkRules": []
        },
        "publicNetworkAccess": "Enabled",
        "supportsHttpsTrafficOnly": true
      },
      "sku": {
        "name": "Standard_GRS",
        "tier": "Standard"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "2024-11-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_gradserver663_z1_name'))]"
      ],
      "location": "westeurope",
      "name": "[parameters('virtualMachines_GradServer_name')]",
      "properties": {
        "additionalCapabilities": {
          "hibernationEnabled": false
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        },
        "hardwareProfile": {
          "vmSize": "Standard_B1ms"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_gradserver663_z1_name'))]",
              "properties": {
                "deleteOption": "Detach"
              }
            }
          ]
        },
        "osProfile": {
          "adminUsername": "azureuser",
          "allowExtensionOperations": true,
          "computerName": "[parameters('virtualMachines_GradServer_name')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "patchSettings": {
              "assessmentMode": "ImageDefault",
              "patchMode": "ImageDefault"
            },
            "provisionVMAgent": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDJHBzqD68tAbOf8cXc3EP7tCOSxLw/0N7cLGQGtXLv4smYMiV05r0R7H3XaniyCqbveFxvbw6Ne5zh5hjXhfb9MLAKh+fhIhw0xqRqfwwdkp35u2d4I6nkFOia9cZT2UPDYk+6ZTwqUWAEmcoYoH8+Yjhfa6+/Yz3irG7EaLXcLZnNz1uG47OasMyVt+eOuIl8vgjwWFhA2o8s65XV/tHre32esbihAQ5snNQJdblqTmQhD3bxpkIwj2LaPYqU92Zm1rK+WC2MCsUGwA8hesW4G6BvcTCk3Kc9UUI1FK4luBfNObFIoT3ih1oLNU0CR45xJtW3QtRpDDJQyig7OVNpEKvOsYzLPZEByFCOoM78xiaXqfFMAc7EsPgvox5bqP8P9MQSh4oBRDzk/IeO2kiivkpPSi2/gpTjIyLAjG0Pijwyk91YkymJBZMYdGNbmmM6znJUUr+lpqQKzxMeEXHNf3SB9H55T/Nwn/m7kksnMb4bV5RjU/czb1R1/0tj/2U= generated-by-azure",
                  "path": "/home/azureuser/.ssh/authorized_keys"
                }
              ]
            }
          },
          "requireGuestProvisionSignal": true,
          "secrets": []
        },
        "storageProfile": {
          "dataDisks": [],
          "diskControllerType": "SCSI",
          "imageReference": {
            "offer": "ubuntu-24_04-lts",
            "publisher": "canonical",
            "sku": "server",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "deleteOption": "Delete",
            "diskSizeGB": 30,
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_GradServer_name'), '_OsDisk_1_0060338f62454592968b76f66a9e8d47'))]",
              "storageAccountType": "Premium_LRS"
            },
            "name": "[concat(parameters('virtualMachines_GradServer_name'), '_OsDisk_1_0060338f62454592968b76f66a9e8d47')]",
            "osType": "Linux"
          }
        }
      },
      "type": "Microsoft.Compute/virtualMachines",
      "zones": [
        "1"
      ]
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_GradServer_nsg_name'))]"
      ],
      "name": "[concat(parameters('networkSecurityGroups_GradServer_nsg_name'), '/Allow-AGW-App')]",
      "properties": {
        "access": "Allow",
        "destinationAddressPrefix": "51.105.241.63",
        "destinationAddressPrefixes": [],
        "destinationPortRange": "3000",
        "destinationPortRanges": [],
        "direction": "Inbound",
        "priority": 340,
        "protocol": "TCP",
        "sourceAddressPrefix": "9.163.48.125",
        "sourceAddressPrefixes": [],
        "sourcePortRange": "*",
        "sourcePortRanges": []
      },
      "type": "Microsoft.Network/networkSecurityGroups/securityRules"
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_GradServer_nsg_name'))]"
      ],
      "name": "[concat(parameters('networkSecurityGroups_GradServer_nsg_name'), '/Allow-AGW-Chatbot')]",
      "properties": {
        "access": "Allow",
        "destinationAddressPrefix": "51.105.241.63",
        "destinationAddressPrefixes": [],
        "destinationPortRange": "8001",
        "destinationPortRanges": [],
        "direction": "Inbound",
        "priority": 350,
        "protocol": "TCP",
        "sourceAddressPrefix": "9.163.48.125",
        "sourceAddressPrefixes": [],
        "sourcePortRange": "*",
        "sourcePortRanges": []
      },
      "type": "Microsoft.Network/networkSecurityGroups/securityRules"
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_appgw_nsg_name'))]"
      ],
      "name": "[concat(parameters('networkSecurityGroups_appgw_nsg_name'), '/AllowAnyCustom65200-65535Inbound')]",
      "properties": {
        "access": "Allow",
        "destinationAddressPrefix": "*",
        "destinationAddressPrefixes": [],
        "destinationPortRange": "65200-65535",
        "destinationPortRanges": [],
        "direction": "Inbound",
        "priority": 200,
        "protocol": "TCP",
        "sourceAddressPrefix": "*",
        "sourceAddressPrefixes": [],
        "sourcePortRange": "*",
        "sourcePortRanges": []
      },
      "type": "Microsoft.Network/networkSecurityGroups/securityRules"
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_appgw_nsg_name'))]"
      ],
      "name": "[concat(parameters('networkSecurityGroups_appgw_nsg_name'), '/AllowAnyHTTPInbound')]",
      "properties": {
        "access": "Allow",
        "destinationAddressPrefix": "*",
        "destinationAddressPrefixes": [],
        "destinationPortRange": "80",
        "destinationPortRanges": [],
        "direction": "Inbound",
        "priority": 210,
        "protocol": "TCP",
        "sourceAddressPrefix": "*",
        "sourceAddressPrefixes": [],
        "sourcePortRange": "*",
        "sourcePortRanges": []
      },
      "type": "Microsoft.Network/networkSecurityGroups/securityRules"
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_appgw_nsg_name'))]"
      ],
      "name": "[concat(parameters('networkSecurityGroups_appgw_nsg_name'), '/AllowAnyHTTPSInbound')]",
      "properties": {
        "access": "Allow",
        "destinationAddressPrefix": "*",
        "destinationAddressPrefixes": [],
        "destinationPortRange": "443",
        "destinationPortRanges": [],
        "direction": "Inbound",
        "priority": 220,
        "protocol": "TCP",
        "sourceAddressPrefix": "*",
        "sourceAddressPrefixes": [],
        "sourcePortRange": "*",
        "sourcePortRanges": []
      },
      "type": "Microsoft.Network/networkSecurityGroups/securityRules"
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_GradServer_nsg_name'))]"
      ],
      "name": "[concat(parameters('networkSecurityGroups_GradServer_nsg_name'), '/HTTP')]",
      "properties": {
        "access": "Allow",
        "destinationAddressPrefix": "*",
        "destinationAddressPrefixes": [],
        "destinationPortRange": "80",
        "destinationPortRanges": [],
        "direction": "Inbound",
        "priority": 100,
        "protocol": "TCP",
        "sourceAddressPrefix": "*",
        "sourceAddressPrefixes": [],
        "sourcePortRange": "*",
        "sourcePortRanges": []
      },
      "type": "Microsoft.Network/networkSecurityGroups/securityRules"
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_GradServer_nsg_name'))]"
      ],
      "name": "[concat(parameters('networkSecurityGroups_GradServer_nsg_name'), '/SSH')]",
      "properties": {
        "access": "Allow",
        "destinationAddressPrefix": "*",
        "destinationAddressPrefixes": [],
        "destinationPortRange": "22",
        "destinationPortRanges": [],
        "direction": "Inbound",
        "priority": 300,
        "protocol": "TCP",
        "sourceAddressPrefix": "*",
        "sourceAddressPrefixes": [],
        "sourcePortRange": "*",
        "sourcePortRanges": []
      },
      "type": "Microsoft.Network/networkSecurityGroups/securityRules"
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_GradServer_vnet_name'))]"
      ],
      "name": "[concat(parameters('virtualNetworks_GradServer_vnet_name'), '/default')]",
      "properties": {
        "addressPrefix": "10.2.0.0/24",
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      },
      "type": "Microsoft.Network/virtualNetworks/subnets"
    },
    {
      "apiVersion": "2024-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_taier_name'))]"
      ],
      "name": "[concat(parameters('storageAccounts_taier_name'), '/default')]",
      "properties": {
        "containerDeleteRetentionPolicy": {
          "days": 7,
          "enabled": true
        },
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "allowPermanentDelete": false,
          "days": 7,
          "enabled": true
        }
      },
      "sku": {
        "name": "Standard_GRS",
        "tier": "Standard"
      },
      "type": "Microsoft.Storage/storageAccounts/blobServices"
    },
    {
      "apiVersion": "2024-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_taier_name'))]"
      ],
      "name": "[concat(parameters('storageAccounts_taier_name'), '/default')]",
      "properties": {
        "cors": {
          "corsRules": []
        },
        "protocolSettings": {
          "smb": {}
        },
        "shareDeleteRetentionPolicy": {
          "days": 7,
          "enabled": true
        }
      },
      "sku": {
        "name": "Standard_GRS",
        "tier": "Standard"
      },
      "type": "Microsoft.Storage/storageAccounts/fileServices"
    },
    {
      "apiVersion": "2024-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_taier_name'))]"
      ],
      "name": "[concat(parameters('storageAccounts_taier_name'), '/default')]",
      "properties": {
        "cors": {
          "corsRules": []
        }
      },
      "type": "Microsoft.Storage/storageAccounts/queueServices"
    },
    {
      "apiVersion": "2024-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_taier_name'))]"
      ],
      "name": "[concat(parameters('storageAccounts_taier_name'), '/default')]",
      "properties": {
        "cors": {
          "corsRules": []
        }
      },
      "type": "Microsoft.Storage/storageAccounts/tableServices"
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_GradServer_vnet_name'), 'appgw-subnet')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_appgw_ip_name'))]"
      ],
      "location": "westeurope",
      "name": "[parameters('applicationGateways_app_gw_name')]",
      "properties": {
        "backendAddressPools": [
          {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/backendAddressPools/BackendServer')]",
            "name": "BackendServer",
            "properties": {
              "backendAddresses": []
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/backendHttpSettingsCollection/chat-http')]",
            "name": "chat-http",
            "properties": {
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": false,
              "port": 8001,
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/probes/chat-probe')]"
              },
              "protocol": "Http",
              "requestTimeout": 20
            }
          },
          {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/backendHttpSettingsCollection/sky-http')]",
            "name": "sky-http",
            "properties": {
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": false,
              "port": 3000,
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/probes/sky-probe')]"
              },
              "protocol": "Http",
              "requestTimeout": 20
            }
          }
        ],
        "enableHttp2": false,
        "frontendIPConfigurations": [
          {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/frontendIPConfigurations/appGwPublicFrontendIpIPv4')]",
            "name": "appGwPublicFrontendIpIPv4",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_appgw_ip_name'))]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/frontendPorts/port_443')]",
            "name": "port_443",
            "properties": {
              "port": 443
            }
          }
        ],
        "gatewayIPConfigurations": [
          {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/gatewayIPConfigurations/appGatewayIpConfig')]",
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_GradServer_vnet_name'), 'appgw-subnet')]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/httpListeners/chat-https')]",
            "name": "chat-https",
            "properties": {
              "customErrorConfigurations": [],
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/frontendIPConfigurations/appGwPublicFrontendIpIPv4')]"
              },
              "frontendPort": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/frontendPorts/port_443')]"
              },
              "hostName": "chatbot-sky-shifters.duckdns.org",
              "hostNames": [],
              "protocol": "Https",
              "requireServerNameIndication": true,
              "sslCertificate": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/sslCertificates/chatbot-sky-shifters')]"
              }
            }
          },
          {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/httpListeners/sky-https')]",
            "name": "sky-https",
            "properties": {
              "customErrorConfigurations": [],
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/frontendIPConfigurations/appGwPublicFrontendIpIPv4')]"
              },
              "frontendPort": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/frontendPorts/port_443')]"
              },
              "hostName": "sky-shifters.duckdns.org",
              "hostNames": [],
              "protocol": "Https",
              "requireServerNameIndication": true,
              "sslCertificate": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/sslCertificates/sky-shifters')]"
              }
            }
          }
        ],
        "probes": [
          {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/probes/sky-probe')]",
            "name": "sky-probe",
            "properties": {
              "host": "sky-shifters.duckdns.org",
              "interval": 30,
              "match": {
                "statusCodes": [
                  "200-399"
                ]
              },
              "minServers": 0,
              "path": "/health",
              "pickHostNameFromBackendHttpSettings": false,
              "protocol": "Http",
              "timeout": 30,
              "unhealthyThreshold": 3
            }
          },
          {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/probes/chat-probe')]",
            "name": "chat-probe",
            "properties": {
              "host": "chatbot-sky-shifters.duckdns.org",
              "interval": 30,
              "match": {
                "statusCodes": [
                  "200-399"
                ]
              },
              "minServers": 0,
              "path": "/health",
              "pickHostNameFromBackendHttpSettings": false,
              "protocol": "Http",
              "timeout": 30,
              "unhealthyThreshold": 3
            }
          }
        ],
        "redirectConfigurations": [],
        "requestRoutingRules": [
          {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/requestRoutingRules/chatRule')]",
            "name": "chatRule",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/backendAddressPools/BackendServer')]"
              },
              "backendHttpSettings": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/backendHttpSettingsCollection/chat-http')]"
              },
              "httpListener": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/httpListeners/chat-https')]"
              },
              "priority": 300,
              "ruleType": "Basic"
            }
          },
          {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/requestRoutingRules/skyRule')]",
            "name": "skyRule",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/backendAddressPools/BackendServer')]"
              },
              "backendHttpSettings": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/backendHttpSettingsCollection/sky-http')]"
              },
              "httpListener": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/httpListeners/sky-https')]"
              },
              "priority": 400,
              "ruleType": "Basic"
            }
          }
        ],
        "rewriteRuleSets": [],
        "sku": {
          "capacity": 2,
          "family": "Generation_1",
          "name": "Basic",
          "tier": "Basic"
        },
        "sslCertificates": [
          {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/sslCertificates/chatbot-sky-shifters')]",
            "name": "chatbot-sky-shifters",
            "properties": {}
          },
          {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/sslCertificates/sky-shifters')]",
            "name": "sky-shifters",
            "properties": {}
          }
        ],
        "trustedRootCertificates": [],
        "urlPathMaps": []
      },
      "type": "Microsoft.Network/applicationGateways",
      "zones": [
        "1",
        "2",
        "3"
      ]
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_appgw_nsg_name'))]",
        "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name'))]"
      ],
      "location": "westeurope",
      "name": "[parameters('virtualNetworks_GradServer_vnet_name')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.2.0.0/16"
          ]
        },
        "enableDdosProtection": false,
        "privateEndpointVNetPolicies": "Disabled",
        "subnets": [
          {
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_GradServer_vnet_name'), 'default')]",
            "name": "default",
            "properties": {
              "addressPrefix": "10.2.0.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          },
          {
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_GradServer_vnet_name'), 'appgw-subnet')]",
            "name": "appgw-subnet",
            "properties": {
              "addressPrefix": "10.2.1.0/29",
              "applicationGatewayIPConfigurations": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/gatewayIPConfigurations/appGatewayIpConfig')]"
                }
              ],
              "delegations": [],
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_appgw_nsg_name'))]"
              },
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ],
        "virtualNetworkPeerings": []
      },
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "2024-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_taier_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_taier_name'))]"
      ],
      "name": "[concat(parameters('storageAccounts_taier_name'), '/default/$web')]",
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "publicAccess": "None"
      },
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers"
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_GradServer_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_appgw_nsg_name'))]",
        "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name'))]"
      ],
      "name": "[concat(parameters('virtualNetworks_GradServer_vnet_name'), '/appgw-subnet')]",
      "properties": {
        "addressPrefix": "10.2.1.0/29",
        "applicationGatewayIPConfigurations": [
          {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/gatewayIPConfigurations/appGatewayIpConfig')]"
          }
        ],
        "delegations": [],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_appgw_nsg_name'))]"
        },
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      },
      "type": "Microsoft.Network/virtualNetworks/subnets"
    },
    {
      "apiVersion": "2024-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_GradServer_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_GradServer_vnet_name'), 'default')]",
        "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_GradServer_nsg_name'))]"
      ],
      "kind": "Regular",
      "location": "westeurope",
      "name": "[parameters('networkInterfaces_gradserver663_z1_name')]",
      "properties": {
        "auxiliaryMode": "None",
        "auxiliarySku": "None",
        "disableTcpStateTracking": false,
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "ipConfigurations": [
          {
            "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_gradserver663_z1_name')), '/ipConfigurations/ipconfig1')]",
            "name": "ipconfig1",
            "properties": {
              "applicationGatewayBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_app_gw_name')), '/backendAddressPools/BackendServer')]"
                }
              ],
              "primary": true,
              "privateIPAddress": "10.2.0.4",
              "privateIPAddressVersion": "IPv4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_GradServer_ip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_GradServer_vnet_name'), 'default')]"
              }
            },
            "type": "Microsoft.Network/networkInterfaces/ipConfigurations"
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_GradServer_nsg_name'))]"
        },
        "nicType": "Standard"
      },
      "type": "Microsoft.Network/networkInterfaces"
    }
  ],
  "variables": {}
}
